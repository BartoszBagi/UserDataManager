@page "/users/edit/{UserId:int}"

@using BlazorPro.Spinkit
@using UserDataManager.Shared.User.Models
@inject IJSRuntime JSRuntime
@inject HttpClient client
@inject NavigationManager NavigationManager

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-10">
                <h1 class="text-center exotic" center>Edit user</h1>
            </div>
            <div class="col-sm-12">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/">Home</a></li>
                    <li class="breadcrumb-item"><a href="/users">Users</a></li>
                    <li class="breadcrumb-item active">Edit user</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>
@if (User == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container">
        <div class="row mb-4 justify-content-center">
                <div class="col-5" style="">            
                    <EditForm Model="User" OnValidSubmit="@SaveUser">       
                        <DataAnnotationsValidator />
                            <ValidationSummary />    
                        <div class="card card-primary">
                            <div class="card-header">
                                <h3><b>Enter User Information</b></h3>
                            </div>
                            <div class="card-body">                        
                                <div class="">
                                   <label for="name">Name</label>
                                    <InputText id="name" @bind-Value="User.Name" class="form-control col-sm-5" placeholder="first name"/>   
                                </div>
                                <div class="">
                                    <label for="lastname">Last name</label>
                                    <InputText id="lastname" @bind-Value="User.LastName" class="form-control col-sm-5" placeholder="first name"/>  
                                </div>
                                <div class="" style="margin: 5% 0;">
                                    <label class="font-weight-bold margin : 0;5px" >birth date</label>
                                    <InputDate @bind-Value="User.BirthDate" />
                                </div>
                                <div class="" style="margin: 5% 0;">
                                    <label class="font-weight-bold">gender</label> 
                                    <select @bind=User.Gender>
                                        <option value="male">male</option>
                                        <option value="female">female</option>
                                    </select>
                                </div>
                                <div class=" ">
                                    <span class=""></span>
                                    <input type="submit" class="form-control btn btn-primary" value="Save" />
                                </div>
                            </div>
                        </div>
                    </EditForm>
                </div>
                <div class="col-5" style="">
                     <EditForm Model="UserAttribute" OnValidSubmit="@AddAttribute">       
                        <DataAnnotationsValidator />
                            <ValidationSummary />
                        <div class="card card-primary">
                            <div class="card-header">
                                <h3><b>Add new attribute</b></h3>
                            </div>
                            <div class="card-body">                        
                                <div class="">
                                   <label for="name">Attribute name</label>
                                    <InputText id="name" @bind-Value="UserAttribute.Name" class="form-control col-sm-5" placeholder="attribute name"/>   
                                </div>
                                <div class="">
                                    <label for="lastname">Value</label>
                                    <InputText id="lastname" @bind-Value="UserAttribute.Value" class="form-control col-sm-5" placeholder="value"/>  
                                </div>
                                <div class=" ">
                                    <span class=""></span>
                                    <input type="submit" class="form-control btn btn-primary" value="Add" />
                                </div>                          
                            </div>
                            <p>
                                Atrybuty:
                            </p>
                            <ul>
                                @foreach (var item in User.Attributes)
                                {
                                   <li>
                                        @item.Name : @item.Value
                                    </li>
                                }
                            </ul>
                        </div>
                    </EditForm>
                </div>        
        </div>
    </div>
}
@code {

    [Parameter]
    public int UserId { get; set; }
    public UserVm User { get; set; }
    public UserAttributeVm UserAttribute { get; set; }
    public string userRelativeUrl = "api/users";
    public string[] Genders = { "male", "female" }; 


    //protected override void OnInitialized()
    //{
    //    base.OnInitialized();
    //}

    protected override async Task OnInitializedAsync()
    {
        User = new UserVm();
        UserAttribute = new UserAttributeVm();
        await GetUserToEdit(UserId);            
        await base.OnInitializedAsync();
    }

    private async Task GetUserToEdit(int id)
    {
        var userVm = await client.GetFromJsonAsync<UserVm>(userRelativeUrl + $"/getUser/{id}");
        if (userVm != null)
            User = userVm;
    }

    private async Task SaveUser()
    {
        await client.PostAsJsonAsync<UserVm>(userRelativeUrl + "/editUser", User);
        StateHasChanged();
    }

    private void AddAttribute()
    {
        if (User.Attributes.FirstOrDefault(a => a.Name == UserAttribute.Name && a.Value == UserAttribute.Value) == null)
        {
            User.Attributes.Add(UserAttribute);
            UserAttribute = new UserAttributeVm();
            StateHasChanged();
        }
    }


}
